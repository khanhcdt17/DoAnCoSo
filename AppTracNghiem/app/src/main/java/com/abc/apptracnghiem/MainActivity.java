package com.abc.apptracnghiem;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v4.app.FragmentManager;import android.view.View;import android.support.design.widget.NavigationView;import android.support.v4.view.GravityCompat;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarDrawerToggle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuItem;import com.abc.apptracnghiem.Fragment.AccessSpecifiersFragment;import com.abc.apptracnghiem.Fragment.AssigningPointerObjectFragment;import com.abc.apptracnghiem.Fragment.ClassMembersTypesFragment;import com.abc.apptracnghiem.Fragment.ClassesFragment;import com.abc.apptracnghiem.Fragment.ConstructorsDestructorsFragment;import com.abc.apptracnghiem.Fragment.DefaultArgumentsFragment;import com.abc.apptracnghiem.Fragment.ExceptionHandlingFragment;import com.abc.apptracnghiem.Fragment.HomeFragment;import com.abc.apptracnghiem.Fragment.InbuiltClassesFragment;import com.abc.apptracnghiem.Fragment.InheritanceTypesFragment;import com.abc.apptracnghiem.Fragment.MemberFunctionsTypesFragment;import com.abc.apptracnghiem.Fragment.MemoryAllocationFragment;import com.abc.apptracnghiem.Fragment.OOPsConceptFeaturesFragment;import com.abc.apptracnghiem.Fragment.ObjectFragment;import com.abc.apptracnghiem.Question.DBHelper;import java.io.IOException;public class MainActivity extends AppCompatActivity        implements NavigationView.OnNavigationItemSelectedListener {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        DrawerLayout drawer = findViewById(R.id.drawer_layout);        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);        drawer.addDrawerListener(toggle);        toggle.syncState();        NavigationView navigationView = findViewById(R.id.nav_view);        navigationView.setNavigationItemSelectedListener(this);        DBHelper db = new DBHelper(this);        try {            db.createDataBase();        } catch (IOException e) {            e.printStackTrace();        }        HomeFragment homeFragment = new HomeFragment();        FragmentManager manager = getSupportFragmentManager();        manager.beginTransaction().replace(R.id.content_main, homeFragment, homeFragment.getTag()).commit();    }    @Override    public void onBackPressed() {        DrawerLayout drawer = findViewById(R.id.drawer_layout);        if (drawer.isDrawerOpen(GravityCompat.START)) {            drawer.closeDrawer(GravityCompat.START);        } else {            super.onBackPressed();        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        return super.onOptionsItemSelected(item);    }    @SuppressWarnings("StatementWithEmptyBody")    @Override    public boolean onNavigationItemSelected(MenuItem item) {        // Handle navigation view item clicks here.        int id = item.getItemId();        if (id == R.id.home) {            HomeFragment homeFragment = new HomeFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, homeFragment, homeFragment.getTag()).commit();        } else if (id == R.id.type01) {            OOPsConceptFeaturesFragment ooPsConceptFeaturesFragment = new OOPsConceptFeaturesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, ooPsConceptFeaturesFragment, ooPsConceptFeaturesFragment.getTag()).commit();        } else if (id == R.id.type02) {            ConstructorsDestructorsFragment constructorsDestructorsFragment = new ConstructorsDestructorsFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, constructorsDestructorsFragment, constructorsDestructorsFragment.getTag()).commit();        } else if (id == R.id.type03) {            AccessSpecifiersFragment accessSpecifiersFragment = new AccessSpecifiersFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, accessSpecifiersFragment, accessSpecifiersFragment.getTag()).commit();        } else if (id == R.id.type04) {            ClassMembersTypesFragment classMembersTypesFragment = new ClassMembersTypesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, classMembersTypesFragment, classMembersTypesFragment.getTag()).commit();        } else if (id == R.id.type05) {            ObjectFragment objectFragment = new ObjectFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, objectFragment, objectFragment.getTag()).commit();        } else if (id == R.id.type06) {            ClassesFragment classesFragment = new ClassesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, classesFragment, classesFragment.getTag()).commit();        } else if (id == R.id.type07) {            InheritanceTypesFragment inheritanceTypesFragment = new InheritanceTypesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, inheritanceTypesFragment, inheritanceTypesFragment.getTag()).commit();        } else if (id == R.id.type08) {            MemberFunctionsTypesFragment memberFunctionsTypesFragment = new MemberFunctionsTypesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, memberFunctionsTypesFragment, memberFunctionsTypesFragment.getTag()).commit();        } else if (id == R.id.type09) {            ExceptionHandlingFragment exceptionHandlingFragment = new ExceptionHandlingFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, exceptionHandlingFragment, exceptionHandlingFragment.getTag()).commit();        } else if (id == R.id.type10) {            AssigningPointerObjectFragment assigningPointerObjectFragment = new AssigningPointerObjectFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, assigningPointerObjectFragment, assigningPointerObjectFragment.getTag()).commit();        } else if (id == R.id.type11) {            DefaultArgumentsFragment defaultArgumentsFragment = new DefaultArgumentsFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, defaultArgumentsFragment, defaultArgumentsFragment.getTag()).commit();        } else if (id == R.id.type12) {            MemoryAllocationFragment memoryAllocationFragment = new MemoryAllocationFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, memoryAllocationFragment, memoryAllocationFragment.getTag()).commit();        } else if (id == R.id.type13) {            InbuiltClassesFragment inbuiltClassesFragment = new InbuiltClassesFragment();            FragmentManager manager = getSupportFragmentManager();            manager.beginTransaction().replace(R.id.content_main, inbuiltClassesFragment, inbuiltClassesFragment.getTag()).commit();        }        DrawerLayout drawer = findViewById(R.id.drawer_layout);        drawer.closeDrawer(GravityCompat.START);        return true;    }}